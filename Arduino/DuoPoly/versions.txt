Versions:

   2.48  set_baud_rate() nixed
         syncs with 1.08
   2.47  add tremolo to Keltos preset
   2.46  Chnl uses SequencerRAM 
         syncs with 1.05
         [30282 / 1217] 
   2.45  preset tempos denominated in beats-per-minute
         preset note durations denoted symbolically
         presets sets note durations via StepProgrammer cmds 'Q', 'E', 'S'
         syncs with 1.04
         [30192 / 1227] 
   2.44  synth renamed duoSynth
         syncs with 1.03
         [30182 / 1229] 
         [30180 / 1229] 1.04m
         [30124 / 1229] 1.04n
   2.43  Chnl::charEv() no longer explicitly propagates sequencer commands
         in Chnl::evHandler() nix (redundant) handling of BUT1_DTAP
         syncs with 1.02
         [30182 / 1229] 
   2.42  Chnl no longer inherits from StepSqnc
         Chnl::charEv() explicitly propagates sequencer commands
         Chnl( chrInfo ) calls sqnc->brief()
         Chnl('S') pushes sequencer
         't' no longer propagated (must be sent within sequencer)
         syncs with 1.00
         [30108 / 1215] 
   2.41  modify Chnl::menu()
         syncs with 0.99
         [29724 / 1352] 
   2.40  Chnl derives from StockVoice
         Chnl explicitly adds a resident tremolo
         edit presets to accomodate swap of Voice(e) and (E)
         syncs with 0.98
         [29516 / 1352] {538} 
   2.39  DuoSynth sets local control of left/right via their keybrd.setMute()
         DuoSynth::outputs() renamed ::output()
         Chnl::subject renamed target
         syncs with lib 0.96
         [29326 / 1254] {620}
   2.38  nix Chnl::charEv(k)
         syncs with lib 0.95
         [29408 / 1248] 
   2.37  nix leading, trailing '#' from presets
         replace leading ! with ' in presets
         --- channel instances made static (for time being)
         syncs with lib 0.94
         [29372 / 1236] 
   2.36  utilize ::setupVoices() ::newVox() ::newOsc()
         syncs with lib 0.93
         [29422 / 787] 
   2.35  DuoSynth derives from VoxSynth
         DuoSynth::output( L, R ) renamed ::outputs( L, R )
         syncs with lib 0.92
         [29214 / 796] 
   2.34  noteOff() takes an argument of type key
         syncs with lib 0.91 
         [28592 / 778] 
   2.33  break DuoSynth::welcome() out from ::setup()
         no explicit reset in DuoSynth::setup()
         syncs with lib 0.90 
         [28562 / 772]
   2.32  nix Chnl::charEv('-')
         nix Chnl::charEv('/')
         DuoSynth::charEv('+') replaces ::charEv('-')
         DuoSynth::charEv('*') replaces ::charEv('/')
         sync with lib 0.89
         [28482 / 770] 
   2.31  merge ChnlSqnc into Chnl
         restore DuoSynth info display
         [28654 / 772] 
   2.30  rght/left become ChnlSqnc* members of DuoSynth, allocated in setup()
         osc, bsf, and lpf are allocated dynamically in ChnlSqnc()
         Chnl::reset(), not DuoSynth::reset() sets osc wavetable to wavebank 0
         [28620 / 772] 
   2.29  load Rood wavetable only if ! SERIAL_PORT
         can no longer accomodate SynStr wavetable even if ! SERIAL_PORT
         [28644 / 1314] 
   2.28  propagation logic altered to work with lib 0.87 (deferred freq/trig)
         nix Chnl::propFreq()
         add Chnl::dynamics() 
         add Chnl::propFreq
         add Chnl::propTrig
         optimize Chnl::charEv() for size
         syncs with 0.87
         [32204 / 1314] 
   2.27  grepfile.lst no longer includes library files (use with atg.bat)
         syncs with 0.82  
         [32150 / 1302] 
   2.26  syncs with 0.71 
         [32220 / 1286] 
   2.25  syncs with 0.68 
         [32212 / 1286] 
   2.24  bugfix: DuoSynth::setVol() propagated globVol even when muted
         using [0.65]
         [32242 / 1286] 
   2.23  move DuoSynth constructor code to DuoSynth::setup()
         remove DuoSynth constructor
         syncs with 0.60
         [32182 / 1286] 
   2.22  calls to Console::getDouble() add ptr arg to location of return val
         syncs with 0.54
         [32192 / 1286] 
   2.21  bugfix: resetting individual channel resulted in no sound in channel  
         nix ChnlSqnc::iniGlobVol()
         syncs with 0.53
         [32144 / 1290] 
   2.20  bugfix: Chnl::charEv('/') was displaying '*' as input prompt
         [32152 / 1294] 
   2.19  call to system_setup() becomes call to ardutouch_setup()
         call to system_loop() becomes call to ardutouch_loop()
         syncs with library 0.50
         [32152 / 1294] 
   2.18  onFocus() replaced by inline sections of charEv()
         syncs with library 0.49
         [32152 / 1294] 
   2.17  load extra wavetable #ifndef USE_SERIAL_PORT (was CONSOLE_OUTPUT)
         [32182 / 1332] 
   2.16  add #error check for KEYBRD_MENUS
         syncs with library 0.47
         [32182 / 1332] 
   2.15  syncs with library 0.42
         [32098 / 1322] 
   2.15  syncs with library 0.41
         [32110 / 1322] 
   2.14  syncs with library 0.35 
         [32122 / 1346] 
   2.13  Keltos preset no longer uses xmf
         syncs with library 0.33
         [32166 / 1348] 
   2.12  bugfix: note releases were not being propagated to latched channel
         add Chnl::noteOff()
         syncs with library 0.32
         [32074 / 1344] 
   2.11  add Chnl::noteOn()
         nix Chnl::dynamics()
         syncs with library 0.31
         [32000 / 1340] 
   2.10  syncs with library 0.27
   2.09  setup() no longer explicitly enables audio
         syncs with library 0.23
         [32054 / 1339] 
   2.08  combine all source files into a single .ino file
         [32054 / 1339] 
   2.07  add check for minimum runtime model in DuoSynth.h
         presets/wavebank defines moved to DuoSynth.cpp
         nix synth_setup() -- use DuoSynth::setup() instead
         replace includes of specific lib files with include of ArduTouch.h
         add ChnlSqnc::iniGlobVol()  
         syncs with library 0.22
         [32082 / 1339] 
   2.06  1st Library-based version
         remove all .h and .cpp files except for DuoSynth and Chnl modules
         [31958 / 1305] 
   2.05  system issues both key-down and key-up events
         4-stage envelopes
         ----
         Envelope scrolls pots over Att-Dec-Sus-Rel
         Voice scrolls pots over Vol-Detune-Glide
         in Voice mode BUT0_PRESS/BUT1_PRESS Scroll up/down
         in DuoPoly mode, button taps no longer enter respective panels
         in ChnlSqnc mode BUT1_TPRESS enters step programmer
         [31958 / 1305] 
   2.04  Mode::charEv() has a return type of boolean
         [31532 / 1295] 
   2.03  Voice becomes a container for an Osc*
         Voice derives from MonoPhonic
         add Osc *Voice::osc 
         Osc derives from Mode
         WaveOsc::output() ::evaluate() no longer defined inline in header
         [31726 / 1295] 
   2.02  LED support
         add Chnl::led
         DuoSynth() sets left.led to red, rght.led to blue LED
         Chnl::onFocus() turns on LED 
         ChnlSqnc::evHandler() blinks LED on step-programmer push
         add DuoSynth::onFocus() turns LEDs off on restore
         system LED code is compiled #ifndef USE_SERIAL_PORT
         add PCB_REV_1
         [31496 / 1273] __FULLHOST__
         [31028 / 1053] __STNDLONE__ (+ SynStr wave table)
   2.01  add Bare-bones runtime model
         add __BAREBONE__  
         add INTERN_CONSOLE 
         [31402 / 1271] __FULLHOST__
         [27918 / 1221] __LITEHOST__
         [26722 / 1044] __STNDLONE__
         [23196 /  931] __BAREBONE__ (Duopoly runs but is minimally usable)
   2.00  add Osc class
         add Osc.h Osc.cpp to project
         WaveOsc derives from Osc
         [31402 / 1271] 
   1.99  keyboard menus are a compile time option
         add KEYBRD_MENUS in Model.h
         [31338 / 1267] 
         [30670 / 1229] no menus
   1.98  remove Config.h from project
         add about_program() macro
         add set_baud_rate() macro
         [31338 / 1267] 
   1.97  WavOsc can use unincorporated wave tables
         bankmem loses name slot #ifndef CONSOLE_OUTPUT
         add WaveTable.h to project
         add wave_descriptor() macro
         add WaveOsc::setTable( const desWavTab* ) 
         add WaveOsc::setTable( const desWavTab*, const char* )
         WaveOsc::setTableFromBank() replaces ::setWave() 
         WaveOsc::setTable() copies descriptor from PROGMEM
         nix WaveBank::[] operator
         add obEvent::getKey()
         [31340 / 1273] 
   1.96  add MonoSynth StereoSynth classes
         DuoSynth starts in right channel
         render_audio() can drive either mono or stereo synths
         add begin_samples() end_samples() macros
         LFO max frequency increased to 20 (was 6)
         LFO frequency pot uses exponential scale
         add Synth::startup(), DuoSynth::startup()
         add Synth::inStereo() 
         ::generate() methods renamed ::output()
         [31302 / 1283] 
   1.95  add SynStr wavetable (source: fpb3900.wav)
         [31146 / 1279] 
   1.94  add runtime models: Full-Host, Lite-Host, Stand-alone
         add Model.h to project
         add __FULLHOST__  __LITEHOST__ __STNDLONE__ 
         conditionally compile prompt() methods on #ifdef CONSOLE_OUTPUT
         [31146 / 1279] __FULLHOST__
         [27878 / 1229] __LITEHOST__
         [26696 / 1056] __STNDLONE__
   1.93  macros for defining presets and wavetables, and constructing banks
         wavetables are enumerated and loaded in DuoPoly.ino
         WaveBank class no longer loads system wavetables by default
         add begin_bank() end_bank() _member() macros
         add define_wavetable() extern_wavetable() _wavetable() macros
         add define_preset() extern_preset() _preset() macros
         increase Bank::Max from 8 to 10
         Bank::charEv() pops mode with ::chosen false on numeric input > ::num 
         Bank::name() returns null if no members were loaded
         Synth::setup() renamed ::load()
         [31146 / 1279] 
   1.92  conditionally compile chrBrief/Info sections on #ifdef CONSOLE_OUTPUT
         use rom strings in Bank::charEv()
         [31148 / 1279] full version
         [28024 / 1263] no console output
         [26842 / 1090] no serial port
   1.91  indigenous detuning of wave oscillators
         add WaveOsc::detune ::idealFreq ::effFreq 
         add WaveOsc('d') ::setDetune() ::calcEffFreq()
         nix WaveOsc::freq
         add detune to scrollable voice params
         add Console::getSByte() ::infoInt()
         [31152 / 1277] full version
         [29454 / 1269] no console output
         [28272 / 1096] no serial port
   1.90  pots can scroll over multiple parameters
         add tap-press button events
         add Scroller class 
         Voice inherits additionally from Scroller 
         add Scroller.cpp Scroller.h to project
         in Voice, add attack decay sustain to scrollable params
         Voice reset unmutes envAmp
         Phonic::evHandler maps pot0 to vol (was pot1)
         [30832 / 1275]
   1.89  Rood wavetable (source:wid_3540.wav) replaces Ether as waveform 2
         Ether wavetable remains, but is not compiled
         XMFilter scales complement to avoid clipping on low weightings
         add XMFilter::norm ::setWeight()
         in Keltos preset, right envelope/filter/glide settings are reworked
         [30452 / 1271]
   1.88  noise-free loading of presets
         add Synth('#')
         all preset strings begin and end with '#'
         add Synth::mute_at_reset
         DuoSynth('.'/'<') set global vol of left/right chnls
         DuoSynth::generate() no longer special cases if amMute()
         Voice::generate() performs segues by ramping instVol
         Voice::instVol ::segVol typed as Ints
         nix Voice::segue
         remove System::pause() ::resume()
         until_rendered() renamed audio::wait()
         [30226 / 1267]
   1.87  meta events
         all controls are PLAYTHRU by default
         bugfix: vibrato control with 0 fade time was never updating
         add Mode::flags.PLAYTHRU
         nix Mode::flags.ONESHOT
         add Console::oneShot ::oneShotMenu()
         move Chnl::menu() to Voice
         move 'w' option from Voice::menu() to WaveOsc::menu()
         system normalizes signed output by += 128, not += 127
         [30214 / 1270]
   1.86  mitigate breaks/distortion in audio during heavy serial output
         add display briefs for all classes derived from Mode
         change console info format to {name value}
         add Voice::setGlobVol()
         DuoSynth pot1 controls overall synth volume
         add until_rendered( byte )
         Console::newline() calls until_rendered() 
         add Mode::brief(), chrBrief
         ::vol becomes a Phonic member
         add Voice::effVol ::globVol
         add Phonic.cpp to project
         [30152 / 1275]
   1.85  mitigate audible 'clicks' on Voice mute/unmute, and at startup
         Voice::dynamics() sets ::segVol to 0 if ::amMute()
         Voice::generate() no longer zero-fills buffer on ::amMute()
         Voice::setVol() no longer sets ::instVol
         audio_setup() sets PWM regs to "0" 
         audio::enable() incorporates an implicit pause 
         remove system::lastR ::lastL
         nix DuoSynth::secDC (was not used)
         [29656 / 1265]
   1.84  serial port usage is optional
         console internals are refined
         add USE_SERIAL_PORT
         nix Mode::flags.COLON 
         nix Console::rprint() ::prompt()
         [29724 / 1269]
   1.83  add Envelope class
         add Envelope.h Envelope.cpp to project
         add Voice::envAmp
         Voice::generate() performs segues at zero crossings
         Voice::segue replaces Voice::flags.SEGUE
         add TControl class
         TControl ~ replaces L for legato triggering
         TControl ' replaces S for stacatto triggering
         bugfix: Tremolo(.) must force val to 1.0
         bugfix: WaveBank::prompt() must have return type of const
         bugfix: LFO/XMFilter/BSFilter::evHandler() must call parent by default
         add enveloping to "Keltos" preset
         [30094 / 1277]
   1.82  string constants are placed in ROM 
         console routines attempt serial output only if output is enabled
         serial port no longer stopped/restarted by Console::disable()/enable()
         (fixes occasional audio glitches and distortion on preset load)
         add Console::output
         add ALLOC_CONSTR() macro
         [28922 / 1211]
   1.81  integrate onboard pot events
         in system module, add readPot() potVal[] NumPots CLOCKWISE_POTS
         add console::postPot()
         add obEvent::getPotVal() ::setPotVal()
         Voice::evHandler() maps pot0 to glide, pot1 to volume
         LFO::evHandler() maps pot0 to freq, pot1 to depth
         BSFilter::evHandler() maps pot0 to shift, pot1 to clip
         XMFilter::evHandler() maps pot0 to weight
         LFO::calcStep() preserves current direction
         LFO::setDepth() calls iniPos() if depth == 0
         remove 0:'g' option from Chnl menu
         [28818 / 1370]
   1.80  keyboard octave settings are maintained by the system module
         dynamic update rate is a compile-time constant in system module
         move ConkeyBrd::octave bumpOctave() getOctave() setOctave() to system
         IDEAL_DYNA_RATE replaces Config::dynaRate
         [28168 / 1361]
   1.79  bugfix: in Voice::generate() cast segVol to int when segueing down
         [28228 / 1367]
   1.78  onBoard events are specified by genus and type
         evGenus replaces obEvType
         add evType
         butAction renames butEvType
         remove but type
         [28228 / 1367]
   1.77  Modes handle all onboard events thru a single method
         add Mode::evHandler()
         nix Mode::butEv()
         unvirtualize Mode::keyEv()
         add obEvent type
         add Onboard.h to project
         remove but.h from project
         remove key.h from project
         butEvType no longer an enum
         [28322 / 1367]
   1.76  object info is displayed via ::charEv()
         remove Mode::info() 
         add chrInfo constant
         cmdTrigger renamed chrTrigger
         In "Hive" preset, right:bsf:shift reduced to 6 from 7 
         In "Industry" preset, left:bsf:shift increased to 5 from 4 
         [28184 / 1399]
   1.75  abrupt changes in instantaneous volume (at trigger pts) are segued
         processing of Voice triggers is deferred until next dynamic update
         add Voice::flags.TRIG
         add Voice::flags.SEGUE
         add Voice::segVol
         add MAX_SEGUE
         add FadeLFO::ready()
         add TrigLFO::ready()
         add LFO::iniVal()
         add XMF_DEF_WEIGHTING
         bugfix: LFO::trigger() was not evaluating
         [27982 / 1431]
   1.74  note changes are deferred to next dynamic update
         vibrato and portamento funcionality moved to Voice from WaveOsc 
         WaveOsc::setFreq() becomes virtual
         add WaveOsc::modFreq()
         add Voice::pendNote ::keyEv() ::setFreq()
         nix Chnl::keyEv()
         add Chnl::dynamics()
         Chnl::propFreq() takes no arg, assumes latched
         in "Cadiz" preset, shorten intro 
         [27604 / 1427]
   1.73  bugfix: restore 8-bit voice output (was scaled to 7 bits since v1.35)
         effects are applied at the pre-amp stage (before volume/tremolo)
         add Voice.cpp to project
         volume and tremolo functionality moved to Voice from WaveOsc 
         Voice::vol is typed as a byte (was a double)
         StepSqnc::exeRec() ignores unMute record after 1st pass
         Mode::newline_info_prompt() renamed ::inform()
         [27706 / 1441]
   1.72  bugfix: unmuting TrigLFO had no effect if free-running
         in "Cadiz" preset, add right channel sequence 
         StdEffects.cpp replaces Filter.cpp
         StdEffects.h   replaces Filter.h
         reinstate Trig::LFO flags.STOPPED
         Console::cfg replaces system::config
         restore Config arg to audio_setup(), console_setup() 
         use CONSTR macro for strings in StdEffects.cpp
         [28200 / 1449]
   1.71  add portamento capability to WaveOsc class
         console I/O is disabled during macro execution
         StepProgrammer remains in mode when buffer full, eats further input
         add "Cadiz" preset (left channel riff only)
         add WaveOsc::glide ::instGlide ::multGlide  ::dirGlide
         add WaveOsc::setGlide() ::calcMultGlide() ::doneGlide()
         add WaveOsc('g')
         in Chnl::menu() low C maps to 'g' (was 'v')
         add system::config
         audio_setup(), console_setup() take system::config as implicit arg
         add Console::enable() ::disable()
         add StepProgrammer::fullHouse ::informFull() and associated logic
         bugfix: StepProgrammer wrote EOS beyond array bounds in certain cases
         [28122 / 1449]
   1.70  add TrigLFO::flags.LEGATO
         add TrigLFO::flags.PEAK
         add TrigLFO('L' 'S')
         add TrigLFO('+'/'-')
         nix TrigLFO::flags.STOPPED
         reshuffle mappings in FadeLFO::menu() TrigLFO::menu()
         EffectsLoop class absorbs EffectsMode class
         Voice no longer inherits from EffectsLoop
         add Voice::effects
         LFO::iniPos() has return type of void (was double)
         [27168 / 1414]
   1.69  audio glitches at the start of presets are mitigated
         add audio::pause() ::resume() 
         add audio::paused  ::pauseCnt ::lastR ::lastL
         [26998 / 1385]
   1.68  sequences can have an initial rest 
         in Sqnc module, add Rest and unMute records
         break StepProgrammer::push() out from StepSqnc('S')
         move mute logic from WaveOsc::generate() to Voice::generate()
         "Omission" right chnl sequenced with vibrato/tremolo settings dialed in
         [26874 / 1381]
   1.67  add FadeLFO class
         Vibrato derives from FadeLFO
         [26628 / 1379]
   1.66  add TrigLFO class
         Tremolo derives from TrigLFO
         add Control::trigger()
         add cmdTrigger symbolic constant
         add Voice( cmdTrigger )
         in LFO::menu(), 'd' now mapped to key 4 (was 2)
         Chnl('f') propagates freq
         add "Omission" preset (left channel only)
         [25922 / 1355]
   1.65  Filter.h   replaces BSFilter.h
         Filter.cpp replaces BSFilter.cpp
         add generic Filter class
         add XMFilter class 
         add Console::getByte()
         nix DuoSynth::reprompt()
         break Mode::newline_info_prompt() out from ::charEv()
         remove ModeHelp.txt from project
         [25212 / 1347]
   1.64  Control::reset() no longer virtual; calls ::charEv('!')
         all classes derived from Control handle resets via charEv('!')
         [24736 / 1309]
   1.63  LFO::dynamics() does nothing if amMute()
         add Mode::flags._RESERVE0, _RESERVE1, _RESERVE2, _RESERVE3 bits
         denote enumerated Mode::flag constants in binary 
         add Control::MUTE bit (maps to Mode::flags._RESERVE0)
         nix Control::mute 
         Control::setMute() calls ::charEv() with '.' or '<'
         add LFO('.')
         [24724 / 1323]
   1.62  LFO internals are reworked
         add LFO::iniPos()
         nix LFO::top ::bot
         add INVERT_SEMITONE
         add isDigit() macro
         [24638 / 1332]
   1.61  DuoSynth prompt changed to "main"
         DuoSynth(/) no longer toggles latching
         DuoSynth(=) does not affect latching
         nix DuoSynth(=)
         add EffectsMode(. < !)
         --- 1st version with Quick Operations Guide
         [24902 / 1368]
   1.60  add InputMode, DigitMode
         EffectsMode can select effect by number
         add EffectsMode::menu()
         add BSFilter::menu()
         BSFilter('c') calls getDigit() 
         BSFilter('s') calls getDigit()
         numbers entered at bsf> prompt no longer set shift
         Console::postKey() echoes menu char only if ECHO
         add Console::getDigit()
         Polo waveform renamed Ether
         add Synth.cpp back to project
         --- Synth.cpp has been missing from project since 1.48!
         [24880 / 1368]
   1.59  remove Menu.h Menu.cpp from project
         add Mode::flags with ECHO COLON ONESHOT MENU bits
         add Mode::menu()
         nix all Menu classes and replace with ::menu() methods
         Console::postKey() sends key thru ::menu() to charEv() if flags::MENU
         nix Mode::delimiter ::echo
         add DuoSynth menu keys = - /
         add ChnlSqnc menu keys e t
         DuoSynth::butEv() selects rght/left on either tap or press
         [24826 / 1397]
   1.58  StrMode handles key and button events
         Mode::butEv( 0.DOUBLETAP ) issues ::charEv( chrESC )
         butEvType enumerations are powers of 2
         StrMode::charEv() eats input beyond maxlen instead of popping mode
         [24660 / 1377]
   1.57  Console_.h replaces Console.h
         [24560 / 1378]
   1.56  add Menu.cpp to project
         add ActiveMenu
         add TransportMenu
         DuoMenu derives from TransportMenu
         add SqncChnlMenu
         add actMenu, csMenu 
         [26998 / 1462]
   1.55  add Bank::keyEv()
         add DuoMenu('p')
         add DuoMenu('w')
         in System.cpp, curKey is volatile and set in readKey()
         [26714 / 1426]
   1.54  add StepSqnc('|')
         add DuoSynth('[') DuoSynth(']') DuoSynth('|')
         add DuoMenu (which translates F# G G# to '|' '[' ']')
         StepSqnc::playback typed as byte
         add StepSqnc::pbOn ::pbOFF ::pbPAUSED constants
         [26644 / 1426]
   1.53  add Menu.h to project
         bugfix : no key/but events were generated while DuoSynth muted
         add Menu class
         add ControlMenu class
         DuoSynth derives from both Synth and ControlMenu
         add DuoSynth::keyEv()
         nix Synth(',') Synth('<') -- i.e. do not disable/enable audio
         add PresetBank::onChoice(), which disables/enables audio
         [26620 / 1426]
   1.52  add focus enumerated type
         Mode::onFocus( focus ) replaces ::onPush() ::onPop()
         ConKeyBrd::prompt() no longer displays octave #
         add ConKeyBrd::info()
         nix ConKeyBrd::promptyp
         add StepProgrammer::prompt()
         StepProgrammer::keyEv() echoes key to console
         StepProgrammer::keyEv() eats key event on EOS
         [26442 / 1414]
   1.51  onboard buttons generate button events
         add but.h to project
         add but struct
         add butEvType enumerated type
         add Mode::butEv()
         add Mode::onPush() ::onPop()
         Console::pushMode() ::popMode() call mode's onPush() onPop() routines
         add Console::postBut()
         add scanBut() butCount[] butPin[] tapPending[]
         scanKeys() does not scan C+ (pin 17)
         add WaveOsc::butEv()
         add DuoSynth::butEv()
         add ChnlSqnc::butEv()
         ConKeyBrd::octave becomes private
         add ConKeyBrd::getOctave() ::setOctave() ::mintOctave
         add ConKeyBrd::bumpOctave() ::butEv()
         add StepProgrammer::butEv() ::onPop()
         (*** coreLib *** copied from Core v0.11, then modified)
         [26410 / 1446]
   1.50  onboard keys generate key events 
         Console::postKey(byte, byte) replaces broadcastKey( key )
         add key::key(byte, byte)
         add ConKeyBrd::keyEv(), which echoes key to console
         add device_io(), scanKeys(), readKey(), keyPins[]
         [25558 / 1354]
   1.49  System.cpp renames Audio.cpp
         add System.h to project
         add system_setup()
         add system_loop()
         add device_io() wrapper (with logic for taking scans)
         add scanRate, bufsPerScan, scanDC
         audio_setup() renames audio::setup()
         render_audio() replaces audio::loop()
         nix .idle slot from Config record
         nix console_loop()
         nix Console::init( Mode* ) 
         [25106 / 1354]
   1.48  add StepSqnc.h StepSqnc.cpp to project 
         add Tuning.h   Tuning.cpp   to project
         add key.h                   to project
         add StepSqnc, StepProgrammer classes
         ChnlSqnc derives from both Chnl and StepSqnc
         add console::broadcastKey() 
         add key struct with ::octave() ::position() ::set()
         add Tuning class
         add EqualTemperament class
         add masterTuning
         StepSqnc::setTempo() enforces minimum tempo
         StepSqnc::info() displays '[' or ']' to inform on playing status
         StepSqnc::start() renames ::turnOn()
         StepSqnc::stop()  renames ::turnOff()
         StepSqnc::playing renames ::on
         add Chnl::name ::setName()
         nix RghtChnl, LeftChnl classes
         nix Console::onoffStr()
         [25066 / 1352]
   1.47  fix to Tremolo depth calculation
         *** coreLib.noHands *** syncs with Quadrant v0.29
   1.46  add WaveOsc.h WaveOsc.cpp BSFilter.h BSFilter.cpp to project
         remove Voice.cpp from project
         rework DuoSynth::generate()
         replace ChnlSqnc::iterate() with ::generate()
         *** coreLib.noHands *** syncs with Quadrant v0.28
         [25224 / 1369]
   1.45  StereoPhonic::generate(char *bufL, char *bufR) replaces ::iterate()
         DuoSynth::generate() loops rght/left iterate() methods
         nix Phonic::iterate()
         nix StereoPhonic::audioL/R
         add MonoPhonic::iterate() 
         add audio::enable(), audio::disable()
         Synth(.) calls audio::disable()
         Synth(<) calls audio::enable()
         canonical setup() calls audio::enable() at end of routine
         normalization of audio values occurs as PWM registers are loaded
         use audio namespace for externally referenced routines
         matrix is typed as *StereoPhonic
         add const audio::bufSz
         *** coreLib.noHands *** syncs with Neurotica v1.04
         [24592 / 1365]
   1.44  audio queue is segmented into fixed-size buffers 
         dynamic updates occur on buffer boundaries
         audio_loop() writes one buffer per call
         timer ISR always writes to PWM registers
         *** coreLib.noHands *** syncs with Neurotica v1.03
         [24508 / 1367]
   1.43  Mode::charEv() renames ::keyEvent()
         add placeholder Mode::keyEv()
         *** coreLib.noHands *** syncs with Neurotica v1.02
         [24430 / 1380]
   1.42  optimizations to BitShiftFilter
         ::val becomes automatic variable in ::iterate()
         remove all code for shift < 0 from in iterate()
         add ::mltShift ::setShift()
         add ::clipMask ::setClip()
         nix clip[]
         nix ::inpInt (not used)
         ::negative renamed ::complement
         [24396 / 1350]
   1.41  Voice::evaluate() rounds output value
         remove console::evElapsed
         remove TIMEOUT code in DuoSynth::iterate()
         Control::amMute() is inlined
         Voice::iterate() tests for mute at start of routine (not end)
         *** coreLib.noHands *** syncs with Neurotica v1.01
         [24414 / 1370]
   1.40  add CONSOLE_OUTPUT macro
         add CONSTR() macro
         [24482 / 1372]
         [23208 / 1269] (undef CONSOLE_OUTPUT)
   1.39  rewrite toStr() using ltoa()
         rewrite Console::getDouble() using atol()
         [24482 / 1372]
   1.38  remove Voice::freqStr[] ::freqToStr()
         [26144 / 1374]
   1.37  Phonic::reset() sets mute false
         *** coreLib.noHands *** syncs with Neurotica v1.00
         [26164 / 1394]
   1.36  update copyright year in all file headers
   1.35  add Tremolo class
         add Voice::tremolo 
         Voice::vol renames ::level
         Voice::setVol() renames ::setLevel()
         Voice('V') pushes vibrato
         Voice('T') pushes tremolo
         Voice('v') sets volume
         Voice::evScalar replaced by ::instVol
         [26142 / 1394]
   1.34  add Voice::level 
         add Voice::evScalar
         add Voice::setLevel()
         add Voice('l')
         add Int type
         Voice::evaluate() reworked to use Ints
         Voice::evaluate() integrates ::evScalar
         LFO::depth ::freq range checking moved to ::setDepth()/setFreq()
         [25748 / 1304]
   1.33  add DWord type
         Voice::idx typed as DWord
         Voice::length typed as word (no longer << 16)
         in Voice::evaluate() aft/fore terminology was reversed
         in Voice::evaluate() aft/fore values typed as ints (not chars)
         [25560 / 1284]
   1.32  add LFO.h LFO.cpp to project
         Vibrato derives from LFO
         [25578 / 1288]
   1.31  Vibrato class
         add Control.h Control.cpp to project
         remove Phonic.cpp from project
         add Control class
         Phonic derives from Control
         Effect derives from Control
         Effect(+) replaces Effect(p)
         Effect(-) replaces Effect(n)
         add Voice(v)
         add Voice::vibrato
         add Console::infoDouble()
         hike dynaRate to 50hz
         [25440 / 1280]
   1.30  ConKeyBrd::keycode_ ::letter_ ::adental_ ::freq_ arrays now in progmem
         add ConKeyBrd::freq0( byte )
         ConKeyBrd::numNotes ::maxOctave typed as bytes
         [24086 / 1204]
   1.29  Bank member lists reside in program memory
         add types.h to project (defines Word struct)
         type bankmem renames member
         add Bank::base ::choice() ::dataPtr(byte)
         Bank::load() renames ::set() 
         nix Bank::members
         *** coreLib.noHands *** syncs with Neurotica v0.99
         [24032 / 1296]
   1.28  add Bank::dataPtr()
         *** coreLib.noHands *** syncs with Neurotica v0.97
         [23992 / 1328]
   1.27  add Bank::choose() ::name() ::idx ::chosen
         Bank::onChoice() replaces ::select(ith)
         member::data is typed as void*
         WaveBank derives from Bank
         remove wavmember
         *** coreLib.noHands *** syncs with Neurotica v0.95
         [23992 / 1328]
   1.26  canonical wavetable descriptors kept in PROGMEM
         remove WaveBankDialog
         WaveBank absorbs WaveBankDialog functionality
         add WaveBank::name(ith)
         WaveBank::choose() renames ::dialog()
         WaveBank::idx renames idxChosen
         remove WaveBank::chosen()
         Wavebank[arg] ::NumTabs are bytes, not words
         WaveBank::completed is reset in ::choose() not ::keyEvent()
         add wavmember struct, wavetables[] 
         Voice::setWave() takes table # as arg, not descriptor&
         [24118 / 1323]
   1.25  add Bank.h Bank.cpp to project
         Bank class replaces MacroBank
         MacroBank derives from Bank
         Bank::members no longer const
         member struct renames macro
         member::data renames ::code
         *** coreLib.noHands *** syncs with Neurotica v0.93
         [24094 / 1352]
   1.24  virtualize Synth::setup()
         *** coreLib.noHands *** syncs with Neurotica v0.78
         [24080 / 1350]
   1.23  macro renames preset struct def
         move macro struct def to Console.h
         break MacroBank out from PresetBank, move to Console module
         Console::exe() renames ::macro()
         PresetBank::macros[] renames ::presets[]
         *** coreLib.noHands *** syncs with Neurotica v0.74
   1.22  PresetBank('1..9') does not reset synth before running macro
         *** coreLib.noHands *** syncs with Neurotica v0.69
         [24062 / 1342]
   1.21  add Config::dynaRate
         dynaRate renames dynaPerSec
         dynaRate, ticksPerDyna are no longer constants
         audio_setup() absorbs setup_timer1(), setup_timer2()
         *** coreLib.noHands *** syncs with Neurotica v0.61
         [24096 / 1342]
   1.20  DuoSynth::iterate()
         [24006 / 1332]
   1.19  Phonic('.') mutes   -- was 'M'
         Phonic('<') unmutes -- was 'm'
         *** coreLib.noHands *** syncs with Neurotica v0.31
         [24004 / 1332]
   1.18  DuoSynth('/') toggles latching on/off
         add Chnl::amFreqLatching()
         [24004 / 1332]
   1.17  Chnl::info() prints space for latch icon when unlatched
         DuoSynth('u') replaces ('.')
         [23972 / 1332]
   1.16  add Phonic::info()
         *** coreLib.noHands *** syncs with Neurotica v0.30
         [23972 / 1332]
   1.15  Console::getDouble(char *) replaces Console::getDouble(char *, double*)
         coreLib.noHands syncs with Neurotica v0.23
         [23930 / 1326]
   1.14  add Phonic::setMute() ::amMute() ::mute
         add Phonic('M'/'m')
         Voice::iterate() checks amMute()
         remove Chnl::iterate()
         coreLib.noHands syncs with Neurotica v0.19
         ---- had to nix inline qualifier on Phonic::amMute() for Voice to find it WTF
         [23916 / 1330]
   1.13  add Creative Commons copyright notice to all files
         [23908 / 1327]
   1.12  nix Effect::process() - use ::iterate()
         [23908 / 1327]
   1.11  nix Control
         Effect derives from MonoPhonic
         Effect::iterate() renamed process()
         [23902 / 1329]
   1.10  voreLib modules sync with Neurotica v1.07
         add Mode.h     to project 
         add Mode.cpp   to project
         add Phonic.h   to project
         add Phonic.cpp to project
         ---- Effects are not being reset
         [24002 / 1337]
   1.09  PresetBank::presets becomes simple ptr 
         PresetBank::set(const preset *) replaces ::add(), sets ::presets ::num
         [24020 / 1343]
   1.08  audio module drives all synthesis without callbacks
         setup() passes config record to audio_setup()
         add Synth *matrix in Audio module
         Config::matrix renames ::startMode
         remove __iterate__()
         remove audio_send()
         [24022 / 1357]
   1.07  console_setup() uses configuration record passed from main module
         add Config.h to project
         remove Version.h from project
         [24056 / 1357]
   1.06  presets are located in ROM
         add Console:::romprint()
         Console::macro() reads string from ROM
         [24000 / 1343]
   1.05  add Synth.cpp to project
         'preset' replaces 'patch'
         add PresetBank class in Synth 
         nix DuoSynth::patchMode()
         add Synth::setup( preset* ) 
         add Synth::keyEvent('p')
         [23962 / 1587]
   1.04  add DuoSynth.cpp to project
         add DuoSynth.h   to project
         add console_setup() wrapper
         add console_loop()  wrapper
         audio_setup() renames audio_init()
         audio_loop()  renames audio_update()
         remove tasks()
         keybrd is allocated in ConKeyBrd.cpp
         [23838 / 1572]
   1.03  remove DuoPoly::invert ::mono ::monoChnl
         remove DupPoly('I' 'i' 'R' 'L' 's')
         [23832 / 1572]
   1.02  add dynamics control logic to __iterate__()  
         add placeholder Voice::dynamics()
         add DuoPoly::dynamics() Synth::dynamics() 
         [23988 / 1582]
   1.01  add Synth.h to project
         add abstract Synth class 
         DuoPoly derives from Synth
         DuoPoly::iterate() subsumes most of __iterate__()
         [23848 / 1576]
   1.00  base version
         [23866 / 1582]
